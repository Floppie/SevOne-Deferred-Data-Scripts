#!/usr/bin/casperjs

var system = require('system');
var utils = require('utils');
var fs = require('fs');

// casperjs adds three args to the beginning
if(system.args.length != 6) {
	this.echo('usage: wemineltc username password');
	phantom.exit(1);
}

var username = system.args[4];
var password = system.args[5];

var casper = require('casper').create();
casper.userAgent('Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31');

casper.start('https://www.wemineltc.com/', function loadSite() {
	return true;
});

casper.then(function login() {
	this.fill('form#loginForm', {
		'username' : username,
		'password' : password
	}, true);
});

casper.thenOpen('https://www.wemineltc.com/accountworkers');
casper.waitForSelector('html > body > div#hld > div.wrapper > div#header > font > div#topstats > table > tbody > tr > td > li > a > font');
var top_stats;
var current_timestamp;
casper.then(function scrapeTopStats() {
	current_timestamp = Math.round(new Date().getTime() / 1000);
	top_stats = this.evaluate(function _scrapeTopStats() {
		var sidebar = document.querySelector('html > body > div#hld > div.wrapper > div#header > font > div#topstats');
		var metrics1 = sidebar.querySelectorAll('table > tbody > tr > td > li > a > font');
		var metrics2 = sidebar.querySelectorAll('table > tbody > tr > td > li > b > font');
		var metrics3 = sidebar.querySelectorAll('table > tbody > tr > td > li > font');
		var data = {
			'btc_ltc' : parseFloat(metrics1[0].innerText),
			'usd_ltc' : parseFloat(metrics1[1].innerText.replace('$', '')),
			'workers' : parseInt(metrics2[0].innerText),
			'pool_hashrate' : parseFloat(metrics2[1].innerText),
			'network_difficulty' : parseFloat(metrics3[1].innerText)
		};
		return data;
	});
});

casper.waitForSelector('html > body > div#hld > div.wrapper > div.block.withsidebar > div.block_content > div.sidebar > div#leftsidebarinner > div.block_content > p > i > b', undefined, undefined, 30000);
var account_data;
casper.then(function scrapeSidebar() {
	account_data = this.evaluate(function _scrapeSidebar() {
		var sidebar = document.querySelector('html > body > div#hld > div.wrapper > div.block.withsidebar > div.block_content > div.sidebar > div#leftsidebarinner > div.block_content');
		var metrics1 = sidebar.querySelectorAll('p > i > b');
		var metrics2 = sidebar.querySelectorAll('p > b > i');
		var data = {
			'hashrate' : parseFloat(metrics1[0].innerText),
			'paid_valid' : parseFloat(metrics1[1].innerText),
			'paid_invalid' : parseFloat(metrics1[2].innerText),
			'unpaid_mine' : parseFloat(metrics2[0].innerText),
			'unpaid_pool' : parseFloat(metrics2[1].innerText),
			'round_pool' : parseFloat(metrics2[2].innerText),
			'round_estimate' : parseFloat(metrics2[3].innerText),
			'account_balance' : parseFloat(metrics2[4].innerText)
		};
		return data;
	});
});

casper.waitForSelector('html > body > div#hld > div.wrapper > div.block.withsidebar > div.block_content > div.sidebar_content > div.block > div.block_content > center > table > tbody > tr', undefined, undefined, 30000);
var worker_data;
casper.then(function scrapeWorkers() {
	worker_data = this.evaluate(function _scrapeWorkers() {
		var rows = document.querySelectorAll('html > body > div#hld > div.wrapper > div.block.withsidebar > div.block_content > div.sidebar_content > div.block > div.block_content > center > table > tbody > tr');
		var data = {}
		for(var i = 1; i < rows.length; i++) {
			var row = rows[i];
			var cells = row.querySelectorAll('td');
			var name = cells[0].innerText;
			var suggestDiffSelect = cells[6].querySelector('select');
			var maxDiffSelect = cells[7].querySelector('select');
			data[name] = {
				'active' : cells[2].innerText == 'N' ? 0 : 1,
				'hashrate' : parseInt(cells[5].innerText),
				'suggested_difficulty' : parseInt(suggestDiffSelect.options[suggestDiffSelect.selectedIndex].value),
				'max_difficulty' : parseInt(maxDiffSelect.options[maxDiffSelect.selectedIndex].value)
			}
		}
		return data;
	});
});

casper.run(function printAllData() {
	this.echo(
		current_timestamp + ' "WeMineLTC" "WeMineLTC pool" "Pool/network stats"' +
		' "BTC/LTC" GAUGE Bitcoin ' + top_stats.btc_ltc +
		' "USD/LTC" GAUGE Dollars ' + top_stats.usd_ltc +
		' "Pool workers" GAUGE Number ' + top_stats.workers +
		' "Pool hashrate" GAUGE Megahash ' + top_stats.pool_hashrate +
		' "Network difficulty" GAUGE Number ' + top_stats.network_difficulty +
		' "Pool unpaid shares" GAUGE Number ' + account_data.unpaid_pool +
		' "Pool unpaid shares /sec" COUNTER64 Number ' + account_data.unpaid_pool +
		' "Pool shares this round" GAUGE Number ' + account_data.round_pool +
		' "Pool shares /sec" COUNTER64 Number ' + account_data.round_pool
	);
	this.echo(
		current_timestamp + ' "WeMineLTC account: ' + username + '" "WeMineLTC account" "Account totals"' +
		' "Current hashrate" GAUGE Kilohash ' + account_data.hashrate +
		' "Paid valid shares" GAUGE Number ' + account_data.paid_valid +
		' "Paid valid shares /sec" COUNTER64 Number ' + account_data.paid_valid +
		' "Paid invalid shares" GAUGE Number ' + account_data.paid_invalid +
		' "Paid invalid shares /sec" COUNTER64 Number ' + account_data.paid_invalid +
		' "Unpaid shares" GAUGE Number ' + account_data.unpaid_mine +
		' "Unpaid shares /sec" COUNTER64 Number ' + account_data.unpaid_mine +
		' "Estimated earnings this round" GAUGE Litecoin ' + account_data.round_estimate +
		' "Account balance" GAUGE Litecoin ' + account_data.account_balance
	);
	for(var name in worker_data) {
		var worker = worker_data[name];
		this.echo(
			current_timestamp + ' "WeMineLTC worker: ' + name + '" "WeMineLTC worker" "Individual worker"' +
			' "Active?" GAUGE Number ' + worker.active +
			' "Hashrate" GAUGE Kilohash ' + worker.hashrate +
			' "Suggested difficulty" GAUGE Number ' + worker.suggested_difficulty +
			' "Max difficulty" GAUGE Number ' + worker.max_difficulty
		); 
	}
	phantom.exit(0);
});


